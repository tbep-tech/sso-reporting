---
title: "Tampa Bay SSO reporting" 
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-link: true
    code-tools:
      source: https://github.com/tbep-tech/sso-reporting/blob/main/docs/sso-reporting.qmd
editor: source
css: styles.css
lightbox: true

execute: 
  warning: false
  message: false
  echo: true
  out-width: 100%
---

```{r}
# load packages
library(tidyverse)
library(here)
library(sf)
library(leaflet)
library(plotly)

data(tbshed, package = 'tbeptools')
load(here('data/rprt.RData'))
load(here("data/vols.RData"))

# ggplot base theme
thm <- theme_minimal(base_size = 14) + 
  theme(
    legend.title = element_blank(), 
    panel.grid.major.x = element_blank(), 
    panel.grid.minor.x = element_blank(), 
    panel.grid.minor.y = element_blank(), 
    strip.background = element_blank(), 
    legend.position = 'top'
  )

# leaflet base plot
mapbs <- tbeptools::util_map(rprt)
```

The following is an evaluation of FDEP spill incident reports for Tampa Bay, available at <https://prodenv.dep.state.fl.us/DepPNP/reports/viewIncidentDetails>, downloaded on __2025-04-02__. The workflow borrows from a previous analysis [here](https://tbep-tech.github.io/piney-point-analysis/spills).

::: {.callout-warning}
## Caveats
The source data is created via public input and has not been quality assured. All of the reported spill volumes extracted from the database have not been visually checked and some values may be erroneous.  No information about pollutants or other parameters are provided in the description and many spills are not raw sewage.  Many reports include information on volume recovered at the site and spills may not discharge directly to surface waters.  Summaries by county refer only to geographic location, not the jurisdiction.  All results should be interpreted relative to a baseline estimate from 2016 of ~200 million gallons total, described in [this report](https://floridadep.gov/sites/default/files/Final%20Report_Evaluation%20of%20SSO%20and%20Unpermitted%20Discharges%2001_06_17.pdf). 
:::

The raw data have been filtered for the Tampa Bay watershed and only relevant columns have been retained.  County estimates refer to only the portion of each county in the watershed. The source code for creating the data object is [here](https://github.com/tbep-tech/sso-reporting/blob/main/R/dat_proc.R) and includes `r nrow(rprt)` records from `r min(rprt$date)` to `r max(rprt$date)`.

Spill volumes, if reported, can be extracted from the description column for each incident.  These values were extracted from the text using [regular expression](https://en.wikipedia.org/wiki/Regular_expression) matching to identify numeric characters that were preceded by "spill volume" or followed by "gallons" or "mg" for million gallons.  Records without any numeric characters in the description were first removed.  If spill volume was reported, the estimate is used independent of whether gallons or million gallons are present in the remainder of the description. Incidents with more than one occurrence of "gallon" text strings used the highest volume present and incidents with "mg" reported have values multiplied by one million.  If a text description included both gallons and million gallons, the former was used.

```{mermaid}
flowchart TD
    A[Raw Description Column] --> B{Contains Numeric\nCharacters?}
    B -->|No| C[Remove Record]
    B -->|Yes| D{Check Pattern Types}

    D -->|None Found| C
    D --> E1{Has 'spill volume:'?}
    D --> E2{Has 'gallon'?}
    D --> E3{Has 'mg'?}

    E1 -->|Yes| F1[Extract number after\n'spill volume:' or\n'spill volume: estimated']
    
    E2 -->|Yes AND\nNo spill volume| F2[Extract all numbers\nbefore 'gallon']
    
    E3 -->|Yes AND\nNo gallon AND\nNo spill volume| F3[Extract numbers\nbefore 'mg'\nExclude 'mg/l']
    
    F2 --> G2[Take maximum if\nmultiple values]
    F3 --> G3[Take maximum if\nmultiple values\nMultiply by 1e6]
    
    F1 --> H[Final Volume Value]
    G2 --> H
    G3 --> H
    
    H --> I{Is Value NA?}
    I -->|Yes| C
    I -->|No| J[Keep Record]
```

Map of incident reports where volume estimates were extracted (n = `r nrow(vols)`, date ranges from `r min(vols$date)` to `r max(vols$date)`.

```{r}
mapbs |> 
  addCircleMarkers(
    data = vols,
    radius = 3, 
    color = 'blue', 
    stroke = FALSE, 
    fillOpacity = 0.5, 
    label = ~date, 
    popup = leafpop::popupTable(vols, 
                                zcol = c('date', 'descrip', 'county', 'volest'), 
                                row.numbers = F, 
                                feature.id = F),
    clusterOptions = markerClusterOptions()
  )
```

```{r}
tomap <- vols |> 
  filter(yr == 2024 & mo %in% c(10, 11))
```

Map of incident reports where volume estimates were extracted, Oct-November 2024 (n = `r nrow(tomap)`). 

```{r}
mapbs |> 
  addCircleMarkers(
    data = tomap,
    radius = 3, 
    color = 'blue', 
    stroke = FALSE, 
    fillOpacity = 0.5, 
    label = ~date, 
    popup = leafpop::popupTable(tomap, 
                                zcol = c('date', 'descrip', 'county', 'volest'), 
                                row.numbers = F, 
                                feature.id = F),
    clusterOptions = markerClusterOptions()
  )
```

## By county

Counts of reports with volume extracted by year and county.

```{r}
toplo <- vols |>
  group_by(yr, county) |>
  summarise(cnt = n(), .groups = 'drop')
tots <- sum(toplo$cnt)
toplo_wide <- toplo |>
  pivot_wider(
    names_from = county,
    values_from = cnt,
    values_fill = 0
  )

plot_ly() |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`Hillsborough`, name = "Hillsborough", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`Manatee`, name = "Manatee", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`Pasco`, name = "Pasco", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`Pinellas`, name = "Pinellas",
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`Polk`, name = "Polk",
           opacity = 0.7) |> 
  layout(
    barmode = "stack",
    showlegend = TRUE,
    legend = list(
      orientation = "h",
      y = 1.1,
      x = 0.5,
      xanchor = "center", 
      traceorder = "reversed"
    ),
    xaxis = list(
      title = "",
      showgrid = FALSE,
      zeroline = FALSE
    ),
    yaxis = list(
      title = "Total reports extracted",
      showgrid = TRUE,
      gridcolor = "lightgray",
      zeroline = FALSE
    ),
    font = list(
      size = 14
    ),
    annotations = list(
      x = 1,
      y = -0.09,
      text = paste0("Total n = ", tots),
      showarrow = FALSE,
      xref = 'paper',
      yref = 'paper',
      font = list(size = 12)
    )
  )
```

Counts of reports with volume extracted by year, month, and county.

```{r}
toplo <- vols |>
  group_by(modt, county) |>
  summarise(cnt = n(), .groups = 'drop')
tots <- sum(toplo$cnt)
toplo_wide <- toplo |>
  pivot_wider(
    names_from = county,
    values_from = cnt,
    values_fill = 0
  )

plot_ly() |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`Hillsborough`, name = "Hillsborough", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`Manatee`, name = "Manatee", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`Pasco`, name = "Pasco", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`Pinellas`, name = "Pinellas",
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`Polk`, name = "Polk",
           opacity = 0.7) |> 
  layout(
    barmode = "stack",
    showlegend = TRUE,
    legend = list(
      orientation = "h",
      y = 1.1,
      x = 0.5,
      xanchor = "center", 
      traceorder = "reversed"
    ),
    xaxis = list(
      title = "",
      showgrid = FALSE,
      zeroline = FALSE
    ),
    yaxis = list(
      title = "Total reports extracted",
      showgrid = TRUE,
      gridcolor = "lightgray",
      zeroline = FALSE
    ),
    font = list(
      size = 14
    ),
    annotations = list(
      x = 1,
      y = -0.09,
      text = paste0("Total n = ", tots),
      showarrow = FALSE,
      xref = 'paper',
      yref = 'paper',
      font = list(size = 12)
    )
  )
```

Million gallons reported by year and county.

```{r}
toplo <- vols |>
  group_by(yr, county) |>
  summarise(volest = sum(volest), .groups = 'drop') |>
  mutate(volest = volest / 1e6)
tots <- nrow(vols)
toplo_wide <- toplo |> 
  pivot_wider(
    names_from = county,
    values_from = volest,
    values_fill = 0
  )

plot_ly() |> 
  add_bars(data = toplo_wide, x = ~yr, y = ~`Hillsborough`, name = "Hillsborough", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`Manatee`, name = "Manatee", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`Pasco`, name = "Pasco", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`Pinellas`, name = "Pinellas",
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`Polk`, name = "Polk",
           opacity = 0.7) |> 
  layout(
    barmode = "stack",
    showlegend = TRUE,
    legend = list(
      orientation = "h",
      y = 1.1,
      x = 0.5,
      xanchor = "center", 
      traceorder = "reversed"
    ),
    xaxis = list(
      title = "",
      showgrid = FALSE,
      zeroline = FALSE
    ),
    yaxis = list(
      title = "Million gallons reported",
      showgrid = TRUE,
      gridcolor = "lightgray",
      zeroline = FALSE
    ),
    font = list(
      size = 14
    ),
    annotations = list(
      x = 1,
      y = -0.09,
      text = paste0("Total n = ", tots),
      showarrow = FALSE,
      xref = 'paper',
      yref = 'paper',
      font = list(size = 12)
    )
  )
```

Million gallons reported by year, month, and county.

```{r}
toplo <- vols |>
  group_by(modt, county) |>
  summarise(volest = sum(volest), .groups = 'drop') |>
  mutate(volest = volest / 1e6)
tots <- nrow(vols)
toplo_wide <- toplo |> 
  pivot_wider(
    names_from = county,
    values_from = volest,
    values_fill = 0
  )

plot_ly() |> 
  add_bars(data = toplo_wide, x = ~modt, y = ~`Hillsborough`, name = "Hillsborough", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`Manatee`, name = "Manatee", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`Pasco`, name = "Pasco", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`Pinellas`, name = "Pinellas",
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`Polk`, name = "Polk",
           opacity = 0.7) |> 
  layout(
    barmode = "stack",
    showlegend = TRUE,
    legend = list(
      orientation = "h",
      y = 1.1,
      x = 0.5,
      xanchor = "center", 
      traceorder = "reversed"
    ),
    xaxis = list(
      title = "",
      showgrid = FALSE,
      zeroline = FALSE
    ),
    yaxis = list(
      title = "Million gallons reported",
      showgrid = TRUE,
      gridcolor = "lightgray",
      zeroline = FALSE
    ),
    font = list(
      size = 14
    ),
    annotations = list(
      x = 1,
      y = -0.09,
      text = paste0("Total n = ", tots),
      showarrow = FALSE,
      xref = 'paper',
      yref = 'paper',
      font = list(size = 12)
    )
  )
```

## By subwatershed

Counts of reports with volume extracted by year and subwatershed.

```{r}
toplo <- vols |>
  group_by(yr, bay_segment) |>
  summarise(cnt = n(), .groups = 'drop')
tots <- sum(toplo$cnt)
toplo_wide <- toplo |>
  pivot_wider(
    names_from = bay_segment,
    values_from = cnt,
    values_fill = 0
  )

plot_ly() |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`OTB`, name = "Old Tampa Bay", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`HB`, name = "Hillsborough Bay", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`MTB`, name = "Middle Tampa Bay", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`LTB`, name = "Lower Tampa Bay",
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`BCB`, name = "Boca Ciega Bay",
           opacity = 0.7) |> 
  add_bars(data = toplo_wide, x = ~yr, y = ~`MR`, name = "Manatee River",
           opacity = 0.7) |> 
  add_bars(data = toplo_wide, x = ~yr, y = ~`TCB`, name = "Terra Ceia Bay",
           opacity = 0.7) |> 
  layout(
    barmode = "stack",
    showlegend = TRUE,
    legend = list(
      orientation = "h",
      y = 1.15,
      x = 0.5,
      xanchor = "center", 
      traceorder = "reversed"
    ),
    xaxis = list(
      title = "",
      showgrid = FALSE,
      zeroline = FALSE
    ),
    yaxis = list(
      title = "Total reports extracted",
      showgrid = TRUE,
      gridcolor = "lightgray",
      zeroline = FALSE
    ),
    font = list(
      size = 14
    ),
    annotations = list(
      x = 1,
      y = -0.09,
      text = paste0("Total n = ", tots),
      showarrow = FALSE,
      xref = 'paper',
      yref = 'paper',
      font = list(size = 12)
    )
  )
```

Counts of reports with volume extracted by year, month, and subwatershed.

```{r}
toplo <- vols |>
  group_by(modt, bay_segment) |>
  summarise(cnt = n(), .groups = 'drop')
tots <- sum(toplo$cnt)
toplo_wide <- toplo |>
  pivot_wider(
    names_from = bay_segment,
    values_from = cnt,
    values_fill = 0
  )

plot_ly() |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`OTB`, name = "Old Tampa Bay", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`HB`, name = "Hillsborough Bay", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`MTB`, name = "Middle Tampa Bay", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`LTB`, name = "Lower Tampa Bay",
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`BCB`, name = "Boca Ciega Bay",
           opacity = 0.7) |> 
  add_bars(data = toplo_wide, x = ~modt, y = ~`MR`, name = "Manatee River",
           opacity = 0.7) |> 
  add_bars(data = toplo_wide, x = ~modt, y = ~`TCB`, name = "Terra Ceia Bay",
           opacity = 0.7) |> 
  layout(
    barmode = "stack",
    showlegend = TRUE,
    legend = list(
      orientation = "h",
      y = 1.15,
      x = 0.5,
      xanchor = "center", 
      traceorder = "reversed"
    ),
    xaxis = list(
      title = "",
      showgrid = FALSE,
      zeroline = FALSE
    ),
    yaxis = list(
      title = "Total reports extracted",
      showgrid = TRUE,
      gridcolor = "lightgray",
      zeroline = FALSE
    ),
    font = list(
      size = 14
    ),
    annotations = list(
      x = 1,
      y = -0.09,
      text = paste0("Total n = ", tots),
      showarrow = FALSE,
      xref = 'paper',
      yref = 'paper',
      font = list(size = 12)
    )
  )
```

Million gallons reported by year and subwatershed.

```{r}
toplo <- vols |>
  group_by(yr, bay_segment) |>
  summarise(volest = sum(volest), .groups = 'drop') |>
  mutate(volest = volest / 1e6)
tots <- nrow(vols)
toplo_wide <- toplo |> 
  pivot_wider(
    names_from = bay_segment,
    values_from = volest,
    values_fill = 0
  )

plot_ly() |> 
  add_bars(data = toplo_wide, x = ~yr, y = ~`OTB`, name = "Old Tampa Bay", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`HB`, name = "Hillsborough Bay", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`MTB`, name = "Middle Tampa Bay", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`LTB`, name = "Lower Tampa Bay",
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~yr, y = ~`BCB`, name = "Boca Ciega Bay",
           opacity = 0.7) |> 
  add_bars(data = toplo_wide, x = ~yr, y = ~`MR`, name = "Manatee River",
           opacity = 0.7) |> 
  add_bars(data = toplo_wide, x = ~yr, y = ~`TCB`, name = "Terra Ceia Bay",
           opacity = 0.7) |> 
  layout(
    barmode = "stack",
    showlegend = TRUE,
    legend = list(
      orientation = "h",
      y = 1.15,
      x = 0.5,
      xanchor = "center", 
      traceorder = "reversed"
    ),
    xaxis = list(
      title = "",
      showgrid = FALSE,
      zeroline = FALSE
    ),
    yaxis = list(
      title = "Million gallons reported",
      showgrid = TRUE,
      gridcolor = "lightgray",
      zeroline = FALSE
    ),
    font = list(
      size = 14
    ),
    annotations = list(
      x = 1,
      y = -0.09,
      text = paste0("Total n = ", tots),
      showarrow = FALSE,
      xref = 'paper',
      yref = 'paper',
      font = list(size = 12)
    )
  )
```

Million gallons reported by year, month, and subwatershed.

```{r}
toplo <- vols |>
  group_by(modt, bay_segment) |>
  summarise(volest = sum(volest), .groups = 'drop') |>
  mutate(volest = volest / 1e6)
tots <- nrow(vols)
toplo_wide <- toplo |> 
  pivot_wider(
    names_from = bay_segment,
    values_from = volest,
    values_fill = 0
  )

plot_ly() |> 
  add_bars(data = toplo_wide, x = ~modt, y = ~`OTB`, name = "Old Tampa Bay", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`HB`, name = "Hillsborough Bay", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`MTB`, name = "Middle Tampa Bay", 
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`LTB`, name = "Lower Tampa Bay",
           opacity = 0.7) |>
  add_bars(data = toplo_wide, x = ~modt, y = ~`BCB`, name = "Boca Ciega Bay",
           opacity = 0.7) |> 
  add_bars(data = toplo_wide, x = ~modt, y = ~`MR`, name = "Manatee River",
           opacity = 0.7) |> 
  add_bars(data = toplo_wide, x = ~modt, y = ~`TCB`, name = "Terra Ceia Bay",
           opacity = 0.7) |> 
  layout(
    barmode = "stack",
    showlegend = TRUE,
    legend = list(
      orientation = "h",
      y = 1.15,
      x = 0.5,
      xanchor = "center", 
      traceorder = "reversed"
    ),
    xaxis = list(
      title = "",
      showgrid = FALSE,
      zeroline = FALSE
    ),
    yaxis = list(
      title = "Million gallons reported",
      showgrid = TRUE,
      gridcolor = "lightgray",
      zeroline = FALSE
    ),
    font = list(
      size = 14
    ),
    annotations = list(
      x = 1,
      y = -0.09,
      text = paste0("Total n = ", tots),
      showarrow = FALSE,
      xref = 'paper',
      yref = 'paper',
      font = list(size = 12)
    )
  )
```