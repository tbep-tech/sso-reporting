---
title: "Tampa Bay SSO reporting" 
date: "`r Sys.Date()`"
format:
  html:
    code-fold: true
    code-copy: true
    code-link: true
    code-tools:
      source: https://github.com/tbep-tech/sso-reporting/docs/sso-reporting.qmd
editor: source
css: styles.css
lightbox: true

execute: 
  warning: false
  message: false
  echo: true
---

The following is an evaluation of FDEP spill incident reports for Tampa Bay, available at <https://prodenv.dep.state.fl.us/DepPNP/reports/viewIncidentDetails>, downloaded on __2024-12-04__. The workflow borrows from a previous analysis [here](https://tbep-tech.github.io/piney-point-analysis/spills).

::: {.callout-warning}
## Caveats
The source data is created via public input and has not been quality assured. All of the reported spill volumes extracted from the database have not been visually checked.  Only a handful were removed as being erroneous. Many spills also occur over several days and total volume per day may be much less than the maximum reported. 
:::

```{r}
# load packages
library(tidyverse)
library(here)
library(sf)
library(leaflet)

data(tbshed, package = 'tbeptools')
load(here("data/rprt.RData"))

# ggplot base theme
thm <- theme_minimal(base_size = 14) + 
  theme(
    legend.title = element_blank(), 
    panel.grid.major.x = element_blank(), 
    panel.grid.minor.x = element_blank(), 
    panel.grid.minor.y = element_blank(), 
    strip.background = element_blank(), 
    legend.position = 'top'
  )

# leaflet base plot
mapbs <- tbeptools::util_map(rprt)
```

The raw data have been filtered for Tampa Bay and only relevant columns have been retained.  The source code for creating the `rprt` object is [here](https://github.com/tbep-tech/R/dat_proc.R).

```{r}
head(rprt)
```

Map of incident report locations. 

```{r, out.width = '100%'}
mapbs |> 
  addCircleMarkers(
    data = rprt,
    radius = 3, 
    color = 'blue', 
    stroke = FALSE, 
    fillOpacity = 0.5, 
    label = ~date, 
    popup = leafpop::popupTable(rprt, 
                                zcol = c('date', 'descrip', 'facility', 'county'), 
                                row.numbers = F, 
                                feature.id = F)
  )
```

Counts of reports by year and county.

```{r}
toplo <- rprt |>
  group_by(yr, county) |>
  summarise(cnt = n(), .groups = 'drop')
tots <- sum(toplo$cnt)
ggplot(toplo, aes(x = yr, y = cnt, fill = county)) +
  geom_bar(stat = 'identity', alpha = 0.7) +
  thm +
  labs(
    x = NULL,
    caption = paste0('Total n = ', tots),
    y = 'Total reports'
  )
```

Spill volumes, if reported, can be identified in the description column for each incident.  These values were extracted from the text using [regular expression](https://en.wikipedia.org/wiki/Regular_expression) matching to identify numeric characters that were preceded by "volume" or followed by "gallons".  Records without any numeric characters in the description were first removed.  Incidents with more than one occurrence of "gallon" text strings were also removed because of ambiguity over which value referred to the spill. No information about pollutants or other parameters are provided in the description.

```{r}
vols <- rprt |>
  st_set_geometry(NULL) |>
  filter(grepl('[0-9]', descrip)) |>
  mutate(
    descrip = gsub('\\,', '', descrip),
    descrip = tolower(descrip),
    hasgal = grepl('gallon', descrip),
    hasvol = grepl('spill\\svolume:\\s', descrip),
    galcnt = str_count(descrip, 'gallon')
  ) |>
  filter(hasvol | hasgal) |>
  # filter(id == 20227145) |> 
  rowwise() |> 
  # filter(galcnt == 1 | hasvol) |>
  mutate(
    volest = case_when(
      hasvol & !hasgal ~ gsub('^.*(spill\\svolume:\\s\\d+).*$', '\\1', descrip),
      hasvol & hasgal ~ gsub('^.*(spill\\svolume:\\s\\d+).*$', '\\1', descrip),
      # hasgal & !hasvol ~ str_extract_all(descrip, "\\d+\\s*gallons?")[[1]] |>
      #   str_extract("\\d+") |> 
      #   as.numeric() |> 
      #   max() |> 
      #   as.character()
    ),
    volest = gsub('gallon|gallons|spill\\svolume:', '', volest),
    # volest = as.numeric(volest)
  ) |>
  filter(!is.na(volest)) |>
  mutate(
    modt = floor_date(date, unit = 'months')
  )

# this one was verified as being wrong
vols <- vols |>
  filter(volest != max(volest))

head(vols)
```

Now plots can be made showing total volume spilled over time. Plots are shown for totals and by county.

```{r}
toplo <- vols |>
  group_by(modt) |>
  summarise(volest = sum(volest), .groups = 'drop') |>
  mutate(volest = volest / 1000)
tots <- nrow(vols)

ggplot(toplo, aes(x = modt, y = volest)) +
  geom_bar(stat = 'identity', alpha = 0.7) +
  thm +
  scale_x_date(date_labels = '%Y %m', date_breaks = '1 month') +
  theme(
    axis.text.x = element_text(size = 7, angle = 45, hjust = 1)
  ) +
  labs(
    x = NULL,
    y = '1000 gallons spilled',
    caption = paste('n = ', tots)
  )
```

```{r}
toplo <- vols |>
  group_by(modt, county) |>
  summarise(volest = sum(volest), .groups = 'drop') |>
  mutate(volest = volest / 1000)
tots <- nrow(vols)

ggplot(toplo, aes(x = modt, y = volest, fill = county)) +
  geom_bar(stat = 'identity', alpha = 0.7) +
  thm +
  scale_x_date(date_labels = '%Y %m', date_breaks = '1 month') +
  theme(
    axis.text.x = element_text(size = 7, angle = 45, hjust = 1)
  ) +
  labs(
    x = NULL,
    y = '1000 gallons spilled',
    caption = paste('n = ', tots)
  )
```

Because spill volumes from the "gallons" text string may be suspect, it may be more accurate to plot only those gallons reported with the "spill volume" text string.

```{r}
toplo <- vols |>
  filter(hasvol) |>
  group_by(modt, county) |>
  summarise(volest = sum(volest), .groups = 'drop') |>
  mutate(volest = volest / 1000)
tots <- vols |>
  filter(hasvol) |>
  nrow()

ggplot(toplo, aes(x = modt, y = volest)) +
  geom_bar(stat = 'identity', alpha = 0.7) +
  thm +
  scale_x_date(date_labels = '%Y %m', date_breaks = '1 month') +
  theme(
    axis.text.x = element_text(size = 9, angle = 45, hjust = 1)
  ) +
  labs(
    x = NULL,
    y = '1000 gallons spilled',
    caption = paste('n = ', tots)
  )
```

```{r}
toplo <- vols |>
  filter(hasvol) |>
  group_by(modt, county) |>
  summarise(volest = sum(volest), .groups = 'drop') |>
  mutate(volest = volest / 1000)
tots <- vols |>
  filter(hasvol) |>
  nrow()

ggplot(toplo, aes(x = modt, y = volest, fill = county)) +
  geom_bar(stat = 'identity', alpha = 0.7) +
  thm +
  scale_x_date(date_labels = '%Y %m', date_breaks = '1 month') +
  theme(
    axis.text.x = element_text(size = 9, angle = 45, hjust = 1)
  ) +
  labs(
    x = NULL,
    y = '1000 gallons spilled',
    caption = paste('n = ', tots)
  )
```